{
  "openapi": "3.0.2",
  "info": {
    "description": "Viper Boot API documentation",
    "title": "Viper Boot API",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://{host}:{port}/",
      "description": "Viper Boot API server",
      "variables": {
        "host": {
          "enum": [
            "127.0.0.1",
            "localhost"
          ],
          "default": "127.0.0.1"
        },
        "port": {
          "enum": [
            3000
          ],
          "default": 3000
        }
      }
    }
  ],
  "paths": {
    "/api/v1/students": {
      "get": {
        "responses": {
          "200": {
            "description": "Ok. Get students",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Student"
                  }
                }
              }
            },
            "links": {
              "GetStudentById": {
                "operationRef": "/api/student/{id}",
                "parameters": {
                  "id": "$response.body#/id"
                },
                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /api/student/{id}`."
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation error"
          },
          "500": {
            "description": "Server error"
          }
        },
        "parameters": [],
        "tags": [
          "Student"
        ],
        "summary": "Get all students",
        "description": "Get all student from database"
      }
    },
    "/api/v1/student/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "Ok. Get student",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation error"
          },
          "500": {
            "description": "Server error"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Student Id.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Student"
        ],
        "summary": "Get student by id",
        "description": "Get student by id from database"
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Ok. Student updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation error"
          },
          "500": {
            "description": "Server error"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Student Id.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Student"
        ],
        "summary": "Update student by id",
        "description": "Update student by id in database"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Ok. Student deleted"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation error"
          },
          "500": {
            "description": "Server error"
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Student Id.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "Student"
        ],
        "summary": "Delete student by id",
        "description": "Delete student by id from database"
      }
    },
    "/api/v1/student": {
      "post": {
        "responses": {
          "201": {
            "description": "Ok. Create student",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentId"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation error"
          },
          "500": {
            "description": "Server error"
          }
        },
        "parameters": [],
        "tags": [
          "Student"
        ],
        "summary": "Create student",
        "description": "Create new student in database",
        "requestBody": {
          "description": "Optional description in *Markdown*",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Person"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Person": {
        "type": "object",
        "properties": {
          "last_name": {
            "type": "string",
            "description": "Last name"
          },
          "first_name": {
            "type": "string",
            "description": "First name"
          },
          "dob": {
            "type": "string",
            "format": "date",
            "default": "Today date",
            "description": "Date of birth"
          },
          "gender": {
            "type": "string",
            "description": "Gender",
            "enum": [
              "MALE",
              "FEMALE"
            ]
          }
        },
        "required": [
          "dob",
          "first_name",
          "gender",
          "last_name"
        ]
      },
      "Student": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "description": "Student Id."
          },
          "student": {
            "description": "Student object.",
            "allOf": [
              {
                "$ref": "#/components/schemas/Person"
              }
            ]
          }
        },
        "additionalProperties": true
      },
      "StudentId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true,
            "description": "Student Id."
          }
        },
        "additionalProperties": true
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      },
      "jwt": {
        "type": "http",
        "bearerFormat": "JWT",
        "scheme": "bearer"
      }
    }
  }
}